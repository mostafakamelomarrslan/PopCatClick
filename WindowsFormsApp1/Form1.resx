<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANgBAADYAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEpKSgBaWloKODg4NyQkJH8XFxe3Ghoa6g8P
        D/sEBAT/BAQE/w8PD/saGhrqFxcXtyUlJX84ODg3XFxcCkxMTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEpKSgBeXl4JMDAwRxoaGqYLCwvmBQUF/AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BQUF/AsLC+YaGhqlMTExRmVlZQlOTk4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIWFhQD///8APz8/Jh0dHZoJCQnvAQEB/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEBAf8KCgrvHx8fmkBA
        QCb///8AgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEREQAtra2ATMzM0YSEhLMAwMD/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8DAwP+EhISzTQ0NEb///8AS0tLAAAAAAAAAAAAAAAAAAAAAAAAAAAATExMAP///wEsLCxSDw8P4gEB
        Af8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8BAQH/EBAQ4i4uLlH///8BUFBQAAAAAAAAAAAAAAAAAHd3dwAAAAAANDQ0Rg8P
        D+IAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/EBAQ4jY2NkYAAAAAeHh4AAAAAAAAAAAAMTExAD8/
        PycSEhLNAQEB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8BAQH/EhISzT09PScwMDAAAAAAAEND
        QwBlZWUHHR0dmgMDA/8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8DAwP/Hh4emWpq
        agdFRUUAJCQkADAwMEgJCQnvAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8KCgruMTExRiUlJQBtbW0KGRkZpwEBAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wEBAf8aGhqmcXFxCru7uy2QkJDihYWF/4WFhf+FhYX/hYWF/4WFhf+FhYX/hYWF/4WF
        hf+FhYX/hYWF/4WFhf+FhYX/hYWF/4WFhf+FhYX/hYWF/4WFhf+FhYX/hYWF/4WFhf+FhYX/hYWF/4WF
        hf+FhYX/hYWF/4WFhf+FhYX/hYWF/5CQkOK6uros8fHxa/Pz8/f09PT/9PT0//T09P/09PT/9PT0//T0
        9P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T0
        9P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/8/Pz9/Hx8Wnw8PCl8PDw//Dw8P/w8PD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8fDw//Ty8P/08vD/9PLw//Ty8P/x8PD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDwpPDw8NDw8PD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Hx8P/V5fL/l832/4zJ9/+Myff/l832/9Xm
        8v/x8fD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PDO8PDw7PDw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/x8PD/4erx/2e6+v8Smf//EZj//xGY
        //8Smf//Z7r5/+Hq8f/x8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw
        8Ovw8PD68PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8vHw/9/p8f9btfr/Fpr//xCY
        //8RmP//EZj//xCY//8Wmv//W7X6/9/p8f/y8fD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw
        8P/w8PD/8PDw+fDw8Prw8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Hx8P/U5fL/abv5/xOZ
        //8Nlv//D5j//xGY//8RmP//D5j//w2W//8Tmf//abv5/9Tl8v/x8fD/8PDw//Dw8P/w8PD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD58PDw7PDw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8vHw/67W
        9P9Xs/r/V7T6/1m0+v89qfz/EZj//xGY//89qfz/WbT6/1e0+v9Xs/r/rtb0//Lx8P/w8PD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8Ovw8PDQ8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw
        8P/w8PD/6u7x/+fs8f/n7PH/6e3x/73c9P87qfz/O6n8/73c9P/p7fH/5+zx/+fs8f/q7vD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDwz/Dw8KXw8PD/8PDw//Dw8P/w8PD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/x8PD/8fDw//Hw8P/x8PD/7+/w/9Xm8f/V5vH/7+/w//Hw8P/x8PD/8fDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PCk8fLxbPPz8Pj09PD/9PTw//T0
        8P/09PD/9PTw//T08P/09PD/9PTw//T08P/09PD/9PTw//T08P/09PD/9fXw//X18P/09PD/9PTw//T0
        8P/09PD/9PTw//T08P/09PD/9PTw//T08P/09PD/9PTw//T08P/09PD/8/Pw9/Hx8GrEvOstn5Dm4paF
        5f+WheX/loXl/5aF5f+WheX/loXl/5aF5f+WheX/loXl/5aF5f+WheX/loXl/5aF5f+WheX/loXl/5aF
        5f+WheX/loXl/5aF5f+WheX/loXl/5aF5f+WheX/loXl/5aF5f+WheX/loXl/5aF5f+gkObiw7rqLIJs
        4go8GdqnKAHY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/KAHY/zwZ
        2qaDb+MKRSXbAE8w3EgvCtnvJwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8uCtnvTzHdR0Ul3ABfQ98Ae2TjBz8d25opA9j/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/KQPY/z4d25l7ZuMHXkPfAAAAAABPMN4AWj3fJzYS2s4nAdj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycB2P83E9rOWj3dJ08w3QAAAAAAAAAAAIl05QAAAM0AUTPdRzMP2uInANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/Mw/a4lQ13kcAAM4AjnvlAAAAAAAAAAAAAAAAAGdL4AD///MBTS3dUzQQ
        2uMnAdj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwHY/zMP2eNLK9xT///3AWZM4AAAAAAAAAAAAAAAAAAAAAAAAAAAAGNJ
        4QDGwvQBUTPdRzYS2s0pA9j+JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwDY/ykD2P43E9rOUzTdR8bE7wFkSuAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIx44wD///8AWz3eJz4c25suCdnvKAHY/ycA2P8nANj/JwDY/ycA2P8nANj/JwDY/ycA
        2P8nANj/JwDY/ycA2P8nANj/JwDY/ygB2P8vCdnwQR/bnFw/3ib///8Ak3/kAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiSeAAclziCU8w3Eg8GdqnMAvZ5ysF2PwnANj/JgDY/ycA
        2P8nANj/JwDY/ycA2P8mANj/JwDY/ysF2PwwC9nmPBnapk8x3Ed8Z+IJaU/gAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYUffAG5W4QpWON44RiTbgDoX
        2rk8GtrqMg7a/CoE2P8qBNj/Mg7Z/Dwa2+o6F9u4RSTbgFY53jhwWOAKYkjfAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/8AAAH+AAAAfgAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH4AAAB/AAAA/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>